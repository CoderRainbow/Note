package com.gate.redis;

/**
 * Nous
 * 常识：
 * 1.在计算机当中数据是存在磁盘里的，以磁盘的维度有两个指标，1是寻址，一般是ms毫秒级别；2是带宽，一般是G/M，带宽就是单位时间有多少个字节流过去。
 *   以内存为维度有1.寻址，一般是ns纳秒级别。 秒 > 毫秒 > 微秒 > 纳秒，磁盘比内存上的寻址时间慢了10w倍。2.带宽，很大。
 * 2.I/O Buffer：磁盘有磁道和扇区，一扇区是512字节。
 * 3.数据放在文件里，随着文件的变大，查询速度会变慢，因为文件变大的话访问硬盘的时候会受到硬盘瓶颈的影响，也就是I/O瓶颈。
 *   于是出现了数据库，数据库是用data page存储的，每个data page是4k，对应操作系统的4k。而且用关系型数据库建表的时候必须给出schemas，也就是类型，字节宽度。
 *   关系型数据库在存储数据的时候是行级存储的， 比如一行有7个字段70个字节，只存入了前10个字节，剩下后面的60个字节数据库会自动去占位，自动开辟空间，
 *   这样的好处是在增删改的时候不用移动数据，保证效率。
 * 4.索引在B+树上，当用户的SQL语句中的where条件命中了索引的时候，查询在B+树会走树干，最后定位到某个叶子，会把索引读到内存中解析，解析之后就可以知道
 *   应该把哪个存储数据的data page读到内存中。
 * 5.数据库：表很大，性能下降对吗？
 *   1)如果有索引，增删改会变慢。
 *   2)1个或少量查询，依然会很快。因为它where条件走的是B+树，走的还是一个索引块，拿到的还是一个data page.
 *   3)并发大的时候会受硬盘带宽影响速度。假设有1w个查询，每个where条件都不一样，索引都不一样，data page存在的位置也不一样，这1w个就是排队进行查询的。
 * 6.数据在磁盘和内存中体积不一样。在磁盘中是没有指针的概念的。
 * 7.缓存的概念：在磁盘中数据比较慢，但是全部存在内存中又太贵，所以就把一部分数据从磁盘中挪到内存中。比如memcached/Redis.
 * 8.https://db-engines.com/en/ 数据库引擎排名。可以看到数据库的基本信息，对比数据库之间的优劣。方便技术选型。
 *
 */
public class T01_Nous {
}
